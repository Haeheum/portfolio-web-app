{
  "sksl": {
    "entrypoint": "water_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float uTime;\nuniform shader uTexture;\nuniform half2 uTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec4 FLT_flutter_local_fragment(vec2 uv)\n{\n    float waterLevel = 0.699999988079071044921875;\n    vec4 waterColor = vec4(1.0);\n    vec2 reflectedUV = uv;\n    if (uv.y >= waterLevel)\n    {\n        reflectedUV.y = (2.0 * waterLevel) - reflectedUV.y;\n        reflectedUV.y += (cos((1.0 / (uv.y - waterLevel)) + (uTime * 2.0)) * 0.014999999664723873138427734375);\n        waterColor = vec4(0.699999988079071044921875, 0.85000002384185791015625, 1.0, 1.0);\n    }\n    return uTexture.eval(uTexture_size * ( reflectedUV)) * waterColor;\n}\n\nvoid FLT_main()\n{\n    vec2 uv_1 = FLT_flutter_local_FlutterFragCoord() / uSize;\n    vec2 param = uv_1;\n    fragColor = FLT_flutter_local_fragment(param);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 2,
        "name": "uTexture",
        "rows": 1,
        "type": 12
      }
    ]
  }
}